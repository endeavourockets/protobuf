// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensors.proto

#ifndef PROTOBUF_INCLUDED_sensors_2eproto
#define PROTOBUF_INCLUDED_sensors_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_sensors_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_sensors_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_sensors_2eproto();
namespace sensors {
class DataDHT;
class DataDHTDefaultTypeInternal;
extern DataDHTDefaultTypeInternal _DataDHT_default_instance_;
class DataGPS;
class DataGPSDefaultTypeInternal;
extern DataGPSDefaultTypeInternal _DataGPS_default_instance_;
class DataIMU;
class DataIMUDefaultTypeInternal;
extern DataIMUDefaultTypeInternal _DataIMU_default_instance_;
}  // namespace sensors
namespace google {
namespace protobuf {
template<> ::sensors::DataDHT* Arena::CreateMaybeMessage<::sensors::DataDHT>(Arena*);
template<> ::sensors::DataGPS* Arena::CreateMaybeMessage<::sensors::DataGPS>(Arena*);
template<> ::sensors::DataIMU* Arena::CreateMaybeMessage<::sensors::DataIMU>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sensors {

// ===================================================================

class DataGPS :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensors.DataGPS) */ {
 public:
  DataGPS();
  virtual ~DataGPS();

  DataGPS(const DataGPS& from);

  inline DataGPS& operator=(const DataGPS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataGPS(DataGPS&& from) noexcept
    : DataGPS() {
    *this = ::std::move(from);
  }

  inline DataGPS& operator=(DataGPS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DataGPS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataGPS* internal_default_instance() {
    return reinterpret_cast<const DataGPS*>(
               &_DataGPS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DataGPS* other);
  friend void swap(DataGPS& a, DataGPS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataGPS* New() const final {
    return CreateMaybeMessage<DataGPS>(nullptr);
  }

  DataGPS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataGPS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataGPS& from);
  void MergeFrom(const DataGPS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataGPS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:sensors.DataGPS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float latitude_;
  float longitude_;
  float height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sensors_2eproto;
};
// -------------------------------------------------------------------

class DataIMU :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensors.DataIMU) */ {
 public:
  DataIMU();
  virtual ~DataIMU();

  DataIMU(const DataIMU& from);

  inline DataIMU& operator=(const DataIMU& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataIMU(DataIMU&& from) noexcept
    : DataIMU() {
    *this = ::std::move(from);
  }

  inline DataIMU& operator=(DataIMU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DataIMU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataIMU* internal_default_instance() {
    return reinterpret_cast<const DataIMU*>(
               &_DataIMU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DataIMU* other);
  friend void swap(DataIMU& a, DataIMU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataIMU* New() const final {
    return CreateMaybeMessage<DataIMU>(nullptr);
  }

  DataIMU* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataIMU>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataIMU& from);
  void MergeFrom(const DataIMU& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataIMU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:sensors.DataIMU)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sensors_2eproto;
};
// -------------------------------------------------------------------

class DataDHT :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensors.DataDHT) */ {
 public:
  DataDHT();
  virtual ~DataDHT();

  DataDHT(const DataDHT& from);

  inline DataDHT& operator=(const DataDHT& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataDHT(DataDHT&& from) noexcept
    : DataDHT() {
    *this = ::std::move(from);
  }

  inline DataDHT& operator=(DataDHT&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DataDHT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataDHT* internal_default_instance() {
    return reinterpret_cast<const DataDHT*>(
               &_DataDHT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DataDHT* other);
  friend void swap(DataDHT& a, DataDHT& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataDHT* New() const final {
    return CreateMaybeMessage<DataDHT>(nullptr);
  }

  DataDHT* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataDHT>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataDHT& from);
  void MergeFrom(const DataDHT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataDHT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float temperature = 1;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 1;
  float temperature() const;
  void set_temperature(float value);

  // float humidity = 2;
  void clear_humidity();
  static const int kHumidityFieldNumber = 2;
  float humidity() const;
  void set_humidity(float value);

  // @@protoc_insertion_point(class_scope:sensors.DataDHT)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float temperature_;
  float humidity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sensors_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataGPS

// float latitude = 1;
inline void DataGPS::clear_latitude() {
  latitude_ = 0;
}
inline float DataGPS::latitude() const {
  // @@protoc_insertion_point(field_get:sensors.DataGPS.latitude)
  return latitude_;
}
inline void DataGPS::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataGPS.latitude)
}

// float longitude = 2;
inline void DataGPS::clear_longitude() {
  longitude_ = 0;
}
inline float DataGPS::longitude() const {
  // @@protoc_insertion_point(field_get:sensors.DataGPS.longitude)
  return longitude_;
}
inline void DataGPS::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataGPS.longitude)
}

// float height = 3;
inline void DataGPS::clear_height() {
  height_ = 0;
}
inline float DataGPS::height() const {
  // @@protoc_insertion_point(field_get:sensors.DataGPS.height)
  return height_;
}
inline void DataGPS::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataGPS.height)
}

// -------------------------------------------------------------------

// DataIMU

// float x = 1;
inline void DataIMU::clear_x() {
  x_ = 0;
}
inline float DataIMU::x() const {
  // @@protoc_insertion_point(field_get:sensors.DataIMU.x)
  return x_;
}
inline void DataIMU::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataIMU.x)
}

// float y = 2;
inline void DataIMU::clear_y() {
  y_ = 0;
}
inline float DataIMU::y() const {
  // @@protoc_insertion_point(field_get:sensors.DataIMU.y)
  return y_;
}
inline void DataIMU::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataIMU.y)
}

// float z = 3;
inline void DataIMU::clear_z() {
  z_ = 0;
}
inline float DataIMU::z() const {
  // @@protoc_insertion_point(field_get:sensors.DataIMU.z)
  return z_;
}
inline void DataIMU::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataIMU.z)
}

// -------------------------------------------------------------------

// DataDHT

// float temperature = 1;
inline void DataDHT::clear_temperature() {
  temperature_ = 0;
}
inline float DataDHT::temperature() const {
  // @@protoc_insertion_point(field_get:sensors.DataDHT.temperature)
  return temperature_;
}
inline void DataDHT::set_temperature(float value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataDHT.temperature)
}

// float humidity = 2;
inline void DataDHT::clear_humidity() {
  humidity_ = 0;
}
inline float DataDHT::humidity() const {
  // @@protoc_insertion_point(field_get:sensors.DataDHT.humidity)
  return humidity_;
}
inline void DataDHT::set_humidity(float value) {
  
  humidity_ = value;
  // @@protoc_insertion_point(field_set:sensors.DataDHT.humidity)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sensors

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_sensors_2eproto
